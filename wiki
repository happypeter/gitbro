.git/config

[alias]
	ci = commit -a -m 
 	co = checkout
	st = status
	br = branchpeter@cow:~/git-reader$ 



github is now down, so this warn me to have a mirror of my repo
so I 
peter@cow:~/reader$ git push
git@gitorious.org:git-reader/git-reader.git master
Counting objects: 130, done.
Compressing objects: 100% (88/88), done.
Writing objects: 100% (130/130), 214.90 KiB, done.
Total 130 (delta 60), reused 86 (delta 37)
To git@gitorious.org:git-reader/git-reader.git
 * [new branch]      master -> master
=> Syncing Gitorious... [OK]
peter@cow:~/reader$ 


[Qtcreator]
** inorder to compile qgit, I do:
peter@cow:~/Desktop/qgit$ sudo apt-get install x11proto-xext-dev
then it is done! Miracle, all the header files uic moc ... are all in
the creator dir, but the Makefile found them all. GOod.
** syntax highlighting example:
/home/peter/qtsdk-2010.01/qt/examples/richtext/syntaxhighlighter
** go without Qtcreator
run ldd reader then I see qt libs are not found, so I

peter@cow:~/qtsdk-2010.01/lib$ sudo cp libQtGui.so.4* /usr/lib/
Display all 1444 possibilities? (y or n)
peter@cow:~/qtsdk-2010.01/lib$ sudo cp libQtGui.so.4* /usr/lib/
[sudo] password for peter: 
peter@cow:~/qtsdk-2010.01/lib$ sudo cp libQtC /usr/lib/
libQtCLucene.so.4      libQtCLucene.so.4.6.1  libQtCore.so.4
libQtCore.so.4.6.1
peter@cow:~/qtsdk-2010.01/lib$ sudo cp libQtCore.so.4* /usr/lib/

all works:-) ./reader runs.
try to build reader, but qmake is not installed,

peter@cow:~/qtsdk-2010.01/qt/bin$ sudo cp -rf qmake /usr/bin/

done perfectly

[meta data]
now I think I need to figure out how we see the repo:

commit0: file1
commit1: file1-r1	file2
commit2: file1-r1	file2-r1
commit3: file1-removed	file2-r2	file3
commit4: 		file2-renamed	file3	file4(renamed file2)
...
....
So I want a output like this
REPO/
file1/         fil2/
r0 r1 r2       r0 r1 r2        (all patches)
then I want my program reader, generate a graphy

                 
commit0: file1   
          |      
commit1:  r1     file2
          |      |
commit2:  r1     r1
          |      |
commit3:  red    r2     file3
          |      |       |
commit4:  none   green  file3  file4
          |      |       |      |
commit5:  none   none   file3  file4

...

....

when we have 200 or 500 files, the picture will grow very big, but
that is not a problem, since we only disply those file who have a
Event(revision, rename, delete..) at that commit

Now we have the graph, and we can click on the node(or, some time you
maybe want to open several neighbor nodes, since they are very likely
connected in some way), then you will get a pop up window, will the
current version of this file, with the diff with his parent displayed
as well in the same page, it is just the github style.