[meta data]
now I think I need to figure out how we see the repo:

commit0: file1
commit1: file1-r1	file2
commit2: file1-r1	file2-r1
commit3: file1-removed	file2-r2	file3
commit4: 		file2-renamed	file3	file4(renamed file2)
...
....
So I want a output like this
REPO/
file1/         fil2/
r0 r1 r2       r0 r1 r2        (all patches)
then I want my program reader, generate a graphy

                 
commit0: file1   
          |      
commit1:  r1     file2
          |      |
commit2:  r1     r1
          |      |
commit3:  red    r2     file3
          |      |       |
commit4:  none   green  file3  file4
          |      |       |      |
commit5:  none   none   file3  file4

...

....

when we have 200 or 500 files, the picture will grow very big, but
that is not a problem, since we only disply those file who have a
Event(revision, rename, delete..) at that commit

Now we have the graph, and we can click on the node(or, some time you
maybe want to open several neighbor nodes, since they are very likely
connected in some way), then you will get a pop up window, will the
current version of this file, with the diff with his parent displayed
as well in the same page, it is just the github style.

[class FileHistroy]

I do not want git-annotate(1) here

I want sth like

FileHistry fh = new fileHistroy("peter.cpp")

then I want fh.commit_msg(), fh.author()

I think I can save everything into a QVector, the iterator number will be the same as the files
revision number, then we can find all the other stuff of this revision

then I want to pass the return value to gui:lineEdit field or sth

