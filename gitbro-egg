#!/bin/bash
if [ `id -u` = "0" ]; then
	echo "Sorry, you should not run me as root."
	exit 1
fi

file="$HOME/test-repo/out"
# set the 'file' variable first

# get extension; everything after last '.'
ext=${file##*.}

# basename
basename=`basename "$file"`
# everything after last '/'
basename=${file##*/}
echo $basename
# dirname
dirname=`dirname "$file"`
echo $dirname
# everything before last '/'
basename=${file%/*}
echo $basename

cd $dirname
#now we are in the repo
git branch
git symbolic-ref HEAD refs/heads/nonsensename  #if there is one file happens to be named new, then git log --fllow will be confused and fail, so we need to use a nonsense name here.
git rm --cached  -r  *
rm -rf *
git commit --allow-empty -m "init on new branch, empty"
git branch

#now we need to get all the patches generated by gitbro-patch
#then just "commit -c commits"
#then we can have a new repo, and push oldrepo/new->newrepo/master
#then we have a perfect new repo, inside which we have one file or
#several files.
